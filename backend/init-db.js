const mysql = require('mysql2/promise');
require('dotenv').config();

async function initializeDatabase() {
  console.log('üîÑ Initialisation de la base de donn√©es...');
  
  // Afficher les param√®tres de connexion (sans le mot de passe pour des raisons de s√©curit√©)
  console.log('Tentative de connexion avec:', {
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    port: process.env.DB_PORT || 3306
  });

  try {
    // Connexion √† MySQL sans sp√©cifier de base de donn√©es
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST,
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      port: process.env.DB_PORT || 3306
    });
  
        try {
            // Cr√©er la base de donn√©es si elle n'existe pas
            console.log('üëâ Cr√©ation de la base de donn√©es si n√©cessaire...');
            await connection.query(`CREATE DATABASE IF NOT EXISTS ${process.env.DB_NAME}`);
            
            // Utiliser la base de donn√©es
            await connection.query(`USE ${process.env.DB_NAME}`);
            
            // Cr√©er la table entreprises si elle n'existe pas
            console.log('üëâ Cr√©ation de la table entreprises si n√©cessaire...');
            await connection.query(`
            CREATE TABLE IF NOT EXISTS entreprises (
                id INT AUTO_INCREMENT PRIMARY KEY,
                nom VARCHAR(255) NOT NULL,
                logo VARCHAR(255),
                descriptif TEXT,
                lien_du_site VARCHAR(255),
                categorie VARCHAR(255),
                mots_cles VARCHAR(255),
                lieu VARCHAR(255)
            )
            `);
            
            console.log('‚úÖ Initialisation de la base de donn√©es termin√©e avec succ√®s !');
        } catch (error) {
            console.error('‚ùå Erreur lors de l\'initialisation de la base de donn√©es:', error);
        } finally {
            // Fermer la connexion
            await connection.end();
        }
    } 
    catch (error) {
        console.error('‚ùå Erreur d√©taill√©e lors de la connexion:', error);
        process.exit(1);
    }
}

// Ex√©cuter la fonction si le script est lanc√© directement
if (require.main === module) {
  initializeDatabase();
} 

// Exporter la fonction pour l'utiliser ailleurs si n√©cessaire
module.exports = { initializeDatabase };