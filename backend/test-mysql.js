// test-mysql.js
const mysql = require('mysql2/promise');
require('dotenv').config();

async function testConnection() {
  console.log('üîç Test de connexion MySQL...');
  console.log('Tentative de connexion avec:');
  console.log(`  - H√¥te: ${process.env.DB_HOST}`);
  console.log(`  - Utilisateur: ${process.env.DB_USER}`);
  console.log(`  - Port: ${process.env.DB_PORT || 3306}`);
  
  try {
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST,
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      port: process.env.DB_PORT || 3306
    });
    
    console.log('‚úÖ Connexion r√©ussie √† MySQL!');
    
    // Tester si on peut cr√©er une base de donn√©es
    console.log('üîç Test de cr√©ation de base de donn√©es...');
    await connection.query(`CREATE DATABASE IF NOT EXISTS ${process.env.DB_NAME}`);
    console.log(`‚úÖ Base de donn√©es '${process.env.DB_NAME}' cr√©√©e ou d√©j√† existante.`);
    
    // Fermer la connexion
    await connection.end();
    console.log('üëã Connexion ferm√©e.');
  } catch (error) {
    console.error('‚ùå Erreur de connexion:', error);
    
    // Ajouter des conseils sp√©cifiques en fonction du code d'erreur
    if (error.code === 'ECONNREFUSED') {
      console.error('\nüîß Conseils pour r√©soudre ECONNREFUSED:');
      console.error('1. V√©rifiez que MySQL est install√© et en cours d\'ex√©cution');
      console.error('2. V√©rifiez que le port MySQL est correct (par d√©faut 3306)');
      console.error('3. Assurez-vous que le pare-feu ne bloque pas les connexions');
    } else if (error.code === 'ER_ACCESS_DENIED_ERROR') {
      console.error('\nüîß Conseils pour r√©soudre ER_ACCESS_DENIED_ERROR:');
      console.error('1. V√©rifiez le nom d\'utilisateur et le mot de passe');
      console.error('2. Assurez-vous que l\'utilisateur a les droits suffisants');
    }
  }
}

testConnection();